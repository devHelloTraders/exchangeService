# ===================================================================
# Spring Boot configuration for the "dev" profile.
#
# This configuration overrides the application.yml file.
#
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

logging:
  level:
    ROOT: Info
    com.traders.exchange.appconfig: Info
    org.springframework.boot.actuate: Info
    com.traders.exchange: Info
    com.traders.common: Info


management:
  zipkin: # Use the "zipkin" Maven profile to have the Spring Cloud Zipkin dependencies
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
  tracing:
    sampling:
      probability: 1.0 # report 100% of traces

spring:
  kafka:
    bootstrap-servers: bootstrap.hellotraders-01.us-central1.managedkafka.true-oasis-439517-g0.cloud.goog:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: hellotraders-01
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  devtools:
    restart:
      enabled: true
      additional-exclude: static/**
    livereload:
      enabled: false # we use Webpack dev server + BrowserSync for livereload
  jackson:
    date-format: "yyyy-MM-dd HH:mm:ss"
    time-zone: UTC
    serialization:
      indent-output: true
  cloud:
    gcp:
      instance-connection-name : true-oasis-439517-g0:us-central1:hello-traders
      sql:
        database-name: hello_traders

    consul:
      #enabled: false
      config:
        fail-fast: false # if not in "prod" profile, do not force to use Spring Cloud Config
        format: yaml
        profile-separator: '-'
        enabled: false
      discovery:
        register-health-check: true
        healthCheckPath: /management/health
        healthCheckInterval: 30s
        health-check:
          enabled: true
          interval: 10s
          timeout: 3s
          http:
            method: GET
            path: /management/health
        enabled: true
        prefer-ip-address: true
#        hostname: exchange-service-dot-true-oasis-439517-g0.el.r.appspot.com
        scheme: http
#        port: 443
        tags:
          - profile=${spring.profiles.active}
          - version='@project.version@'
          - git-version=${git.commit.id.describe:}
          - git-commit=${git.commit.id.abbrev:}
          - git-branch=${git.branch:}
#      host: consul-585407576955.us-central1.run.app
#      port: 443
      host: localhost
      port: 8500
      scheme: http
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:mysql://localhost:3306/hello_traders?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
    #url: jdbc:mysql://google/hello_traders?cloudSqlInstance=true-oasis-439517-g0:us-central1:hello-traders&socketFactory=com.google.cloud.sql.mysql.SocketFactory&user=root&password=root
    username: system
    password: systemuser
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      poolName: Hikari
      auto-commit: false
      maximum-pool-size: 70
      minimum-idle: 5
      idle-timeout: 30000
      connection-timeout: 250000
      leak-detection-threshold: 350000
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
  liquibase:
    # Remove 'faker' if you do not want the sample data to be loaded automatically
    contexts: dev, faker
  messages:
    cache-duration: PT1S # 1 second, see the ISO 8601 standard
  thymeleaf:
    cache: false
#  session:
#    jdbc:
#      initialize-schema: always

server:
  address: 0.0.0.0
  port: ${PORT:8088}
  # make sure requests the proxy uri instead of the server one
  forward-headers-strategy: native

# ===================================================================
# ===================================================================

config:
  kiteConfig:
    apiKey: x07vtchwb1r0up2b
    apiSecret: e76jl3cj6xl1hlteu0cdvn5qvk559qrm
    supportedExchange: NFO,BFO,MCX
    instrumentLoadDelta: 8
    tickerBatch : 3000
  dhanConfig:
    apiKey: 1105449365 #later encrypt both param
    apiSecret: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJkaGFuIiwicGFydG5lcklkIjoiIiwiZXhwIjoxNzM4ODU4MzgzLCJ0b2tlbkNvbnN1bWVyVHlwZSI6IlNFTEYiLCJ3ZWJob29rVXJsIjoiIiwiZGhhbkNsaWVudElkIjoiMTEwNTQ0OTM2NSJ9.gr1Ec1ruz8eQW27q84e48kpkM02MCQdDVtF5Ltbuxx6zzlW7Q2AiKgpHIXyV7va4wkuGNAjQxJDBOBmr8Kwt5Q
    supportedExchange: NFO,BFO,MCX
    instrumentLoadDelta: 8
    tickerBatch: 5000
    instrumentUrl: https://images.dhan.co/api-data/api-scrip-master.csv
    active: true
    apiCredentials:
      - AEO069ay17EvdiStUU2UKTP51uVj6LNwYE1vjVjPYzC4PgZDRoFTVAWVJpqE7c3VTCW/PRyS5g1VimjWTXOMTnVxD8cazyetWAvqbGUv9rJK97Fesy88L+f/AT525OY31pdW7hz11awjK5eE9aYyfH0tjIlssBpOPhtoBnA9hMqBAUyqSt+3TPGOM2F1XfOl5P64v3Hkqv4RU8VixDAi0eQvKjZnozK+pbZZJS0LosgmyH4eAzPcF6w/iTGObTOAELrxufcFdUFBaT1RR6X5yQA5FKIRd9K6no+j0WuvQ8gKO4h5/HXozB3wf8uORFtq75UGhCFo+TUdHUAfo99UFJAUdfMq7t82kT5jkB95ZriYq0sqIewlhSg+nz7l3u80T5kiIYqIrdSYBJNtUVl0vg==
    allowedConnection: 5
    reservedConnection: 2
    allowedDaysRange: 120
    allowedHttpRetry: 2
    allowedHttpRetryDelay: 1000
    restBatchSize: 1000
  stockConfig:
    batchSize: 80
    topicName: stockprice


  redis:
    session:
      ttl: 300
  cache: # Cache configuration
    redis: # Redis configuration
      expiration: -1 # By default objects stay 1 hour (in seconds) in the cache
      #server: redis://default:HelloTraders%40123@redis-16705.c244.us-east-1-2.ec2.redns.redis-cloud.com:16705
      server: redis://localhost:6379
      cluster: false

  customPool:
    minThreads: 10
    scaleCount: 90
  customConnectionPool:
    minIdle : 5
    scaleCount : 90
    connTimeout : 20000
#        server: redis://localhost:6379,redis://localhost:16379,redis://localhost:26379
#        cluster: true
#  # CORS is disabled by default on microservices, as you should access them through a gateway.
#  # If you want to enable it, please uncomment the configuration below.
  # cors:
  #   allowed-origins: "http://localhost:9000,https://localhost:9000"
  #   allowed-methods: "*"
  #   allowed-headers: "*"
  #   exposed-headers: "Authorization,Link,X-Total-Count"
  #   allow-credentials: true
  #   max-age: 1800
  security:
    authentication:
      jwt:
#        # This token must be encoded using Base64 and be at least 256 bits long (you can type `openssl rand -base64 64` on your command line to generate a 512 bits one)
        base64-secret: YmYyOGZmZGEzMWY5OGIxNjZlMDczZmQ1OWM2ZjhiMmJhYzRjNGM5NWViODQwYzQ0MTEyYWM2NDYwZTRhMzkxYzQ2YzVjYzIyZjJlOGFiNWRjYzk4MWEyMTdjMjI0MDJhY2Q3ODA1OWQwZjQ3NWI1YjlkNzIwZThmNTAzYWRiYTY=
#        # Token is valid 24 hours
        token-validity-in-seconds: 86400
        token-validity-in-seconds-for-remember-me: 2592000
  logging:
    use-json-format: false # By default, logs are not in Json format
    logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
      enabled: false
      host: localhost
      port: 5000
      ring-buffer-size: 512
# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
#
# More documentation is available at:
# ===================================================================

# application:
